@model MovieListing.Models.Movy
<fieldset>
    @*@using (Html.BeginForm())
        {*@

    @using (Html.BeginForm("Create", "Movie", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfRelease, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearOfRelease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearOfRelease, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Poster, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })
                <input type="file" name="file" id="file" onchange="fileCheck(this);" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Actor.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Actor.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Actor.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Producer.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Producer.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Producer.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<tr>
            <td> Actor Name </td>
            <div class="col-md-10">
                @Html.DropDownList("Actor", (IEnumerable
               <SelectListItem>)ViewBag.ActorName)
            </div>
        </tr>
        <tr>
            <td> producer Name </td>
            <div class="col-md-10">
                @Html.DropDownList("Producer", (IEnumerable
               <SelectListItem>)ViewBag.ProducerName)
            </div>
        </tr>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</fieldset>

@*Extra: Jquery-Ajax function for DropDown List, Already DropDown Added using ViewBag and Utility Class*@

@*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $.ajax({
                url: "ReturnJSONDataToAJax",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                success: function (result) {
                    $(result).each(function () {
                        $("#FromJson").append($("<option></option>").val(this.ActorID).html(this.Name));
                    });
                },
                error: function (data) { }
            });
        });
    </script>*@  